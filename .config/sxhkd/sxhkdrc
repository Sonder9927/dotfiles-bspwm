#
# wm independent hotkeys
#

# terminal emulator
super + Return
	LIBGL_ALWAYS_SOFTWARE=1 alacritty
alt + Return
	LIBGL_ALWAYS_SOFTWARE=1 alacritty
	# alacritty

## program launcher
### rofi
alt + f
  notify-send "Starting rofi..."; \
	rofi -show drun
### flameshot
alt + a
	flameshot gui
## thunar
alt + shift + f
  notify-send "Starting thunar..."; \
  thunar
## math-shell
super + m
  notify-send "Starting calculate-tool: eva..."; \
  alacritty --class math -e eva
## math-shell
alt + m
  notify-send "Starting ghci for Haskell..."; \
  haskell_i  # run code written in functions/haskell_i.fish
## translate-shell
alt + t
  notify-send "Starting translate-shell..."; \
  alacritty --class trans -e {{trans :zh -e bing -brief -shell}}

### browser
# alt + {_,shift + }b
# 	{firefox,chromium}

## run scripts
### loadkeys
ctrl + super + alt + k
  bash $HOME/scripts/xmod.sh; \
  notify-send -t 1000 "Load keymap configuration..."
### i3lock
ctrl + super + alt + l
  # i3lock -i $HOME/Pictures/Background/Lock_bg/dog_lock.png -t
  i3lock -i $HOME/Pictures/Background/Lock_bg/mirana.png -t
### blurlock

# make sxhkd reload its configuration files:
super + Escape
  notify-send "Reload Sxhkd..."; \
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + q
	bspc quit
super + alt + r
  # notify-send "Reload Bspwm..."; \
	bspc wm -r

# close and kill
alt + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
alt + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
alt + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
